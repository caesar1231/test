name: Create a new release

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  update-version:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get the latest release tag
        run: |
          LATEST_RELEASE=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases/latest)
          LATEST_TAG=$(echo $LATEST_RELEASE | jq -r .tag_name)
          LATEST_TAG=${LATEST_TAG#v}
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Generate a tag for new update
        if: startsWith(github.head_ref, 'develop')
        env:
          MAJOR_LABEL: major
        run: |
          IFS='.' read -r -a TAG_PARTS <<< "$LATEST_TAG"
          LABELS=$(jq -r '.pull_request.labels[].name' "$GITHUB_EVENT_PATH")

          if echo "$LABELS" | grep -q "$MAJOR_LABEL"; then
            NEW_MAJOR=$((TAG_PARTS[0] + 1))
            NEW_TAG="$NEW_MAJOR.0.0"
          else
            NEW_MINOR=$((TAG_PARTS[1] + 1))
            NEW_TAG="${TAG_PARTS[0]}.$NEW_MINOR.0"
          fi

          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Generate a tag for hotfix
        if: startsWith(github.head_ref, 'hotfix')
        run: |
            IFS='.' read -r -a TAG_PARTS <<< "$LATEST_TAG"
            NEW_PATCH=$((TAG_PARTS[2] + 1))
            NEW_TAG="${TAG_PARTS[0]}.${TAG_PARTS[1]}.$NEW_PATCH"

            echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
    
      - name: Create a new release
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d "{\"tag_name\":\"${{ env.NEW_TAG }}\"}"
          
          echo "Cretaed a new release: ${{ env.NEW_TAG }}"
